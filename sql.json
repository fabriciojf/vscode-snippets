{
	// Place your snippets for sql here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"createtable": {
		"prefix": "sql-newtable",
		"body": [
			"CREATE TABLE NAME (",
    		"  id serial,",
    		"  CONSTRAINT pk_NAME PRIMARY KEY (id),",
			"  UNIQUE(FIELD)",
			");",
		],
		"description": "SQL New Table"
	},
	"procedure": {
		"prefix": "sql-procedure",
		"body": [
			"",
			"DROP FUNCTION IF EXISTS PROCEDURENAME();",
			"CREATE FUNCTION PROCEDURENAME()",
			"    RETURNS trigger",
			"    LANGUAGE 'plpgsql'",
			"    COST 100",
			"AS $BODY$",
			"BEGIN",
			"",
			"  if ((new.status != 'online') AND (old.status = 'online')) then",
			"    new.end_contact = now();",
			"    new.total_time = new.end_contact - old.created;",
			"  end if;",
			"",
			"  return new;",
			"END;",
			"$BODY$;",
		],
		"description": "SQL New Table"
	},
	"trigger": {
		"prefix": "sql-trigger",
		"body": [
			"DROP TRIGGER IF EXISTS tg_NAME ON TABLE;",
			"CREATE TRIGGER tg_NAME",
    		"  BEFORE UPDATE",
    		"  ON TABLE",
    		"  FOR EACH ROW",
    		"  EXECUTE PROCEDURE PROCEDURENAME();",
		],
		"description": "SQL New Table"
	},
	"function": {
		"prefix": "sql-function",
		"body": [
			"CREATE OR REPLACE FUNCTION fc_name(",
			"   input_param character varying,",
			")",
			"  RETURNS boolean",
			"  LANGUAGE 'plpgsql'",
			"  COST 100",
			"AS $BODY$",
			"BEGIN",
			"",
			"  DELETE FROM chats;",
			"",
			"  RETURN true;",
			"END;",
			"$BODY$;"
		],
		"description": "SQL function"
	}
}
