{
	// Place your snippets for sql here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"simpleif": {
		"prefix": "sql-if",
		"body": [
			"IF (jsondata->>'media' is not null) THEN",
			"    NEW.channel = jsondata->>'media';",
		        "END IF;",
		],
		"description": "SQL Simple IF"
	},
	"simplecase": {
		"prefix": "sql-case",
		"body": [
			"SELECT CASE WHEN (jsondata->>'media') IS NULL THEN",
			"    'aaaa'",
			"ELSE",
			"    jsondata->>'media'",
			"END",
			"FROM chassi_contacts"
		],
		"description": "SQL Simple Case"
	},
	"createtable": {
		"prefix": "sql-newtable",
		"body": [
			"CREATE TABLE NAME (",
    		        "  id serial,",
    		        "  CONSTRAINT pk_NAME PRIMARY KEY (id),",
			"  UNIQUE(FIELD)",
			");",
		],
		"description": "SQL New Table"
	},
	"procedure": {
		"prefix": "sql-procedure",
		"body": [
			"",
			"DROP FUNCTION IF EXISTS PROCEDURENAME();",
			"CREATE FUNCTION PROCEDURENAME()",
			"    RETURNS trigger",
			"    LANGUAGE 'plpgsql'",
			"    COST 100",
			"AS \\$BODY\\$",
			"BEGIN",
			"",
			"  if ((new.status != 'online') AND (old.status = 'online')) then",
			"    new.end_contact = now();",
			"    new.total_time = new.end_contact - old.created;",
			"  end if;",
			"",
			"  return new;",
			"END;",
			"\\$BODY\\$;",
		],
		"description": "SQL New Table"
	},
	"trigger": {
		"prefix": "sql-trigger",
		"body": [
			"DROP FUNCTION IF EXISTS procedure_NAME();",
			"CREATE FUNCTION procedure_NAME()",
			"    RETURNS trigger",
			"    LANGUAGE 'plpgsql'",
			"    COST 100",
			"AS \\$BODY\\$",
			"BEGIN",
			"",
			"  IF ((NEW.status != 'online') AND (OLD.status = 'online')) THEN",
			"    NEW.end_contact = now();",
			"    NEW.total_time = NEW.end_contact - OLD.created;",
			"  END IF;",
			"",
			"  RETURN NEW;",
			"END;",
			"\\$BODY\\$;",
			"",
			"DROP TRIGGER IF EXISTS tg_NAME ON table_NAME;",
			"CREATE TRIGGER tg_NAME",
    		        "  BEFORE INSERT OR UPDATE",
    		        "  ON table_NAME",
    		        "  FOR EACH ROW",
    		        "  EXECUTE PROCEDURE procedure_NAME();",
		],
		"description": "SQL New Table"
	},
	"function": {
		"prefix": "sql-function",
		"body": [
			"CREATE OR REPLACE FUNCTION fc_name(",
			"   input_param character varying,",
			")",
			"  RETURNS boolean",
			"  LANGUAGE 'plpgsql'",
			"  COST 100",
			"AS \\$BODY\\$",
			"BEGIN",
			"",
			"  DELETE FROM chats;",
			"",
			"  RETURN true;",
			"END;",
			"\\$BODY\\$;"
		],
		"description": "SQL function"
	},
	"json-select": {
		"prefix": "sql-jsonb-simple-select",
		"body": [
			"SELECT jsondata->>'media', jsondata->'sys'->>'ani' FROM chassi_contacts;",
			"SELECT * FROM chassi_contacts WHERE jsondata->>'media' IN ('message', 'voice');",
			"SELECT * FROM chassi_contacts WHERE jsondata @> '{\"media\": [\"message\"]}';",
			"SELECT * FROM chassi_contacts WHERE jsondata @> '{\"sys\": {\"ani\": \"103\"]}';",
			"UPDATE users SET jsondata = jsondata || '{\"media\": \"voice\"}';"
		],
		"description": "SQL Jsonb SimpleSelect"
	}
}
