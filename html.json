{
	"CakeLink": {
		"prefix": "cake-link",
		"body": [
			"<?= \\$this->Html->link('<i class=\"\"></i> ' . __('Add'), array(",
			"\t'plugin' => false,",
			"\t'admin' => true,",
			"\t'controller' => '',",
			"\t'action' => '',",
			"), array(",
			"\t'escape' => false,",
			"\t'class' => '',",
			")); ?>"
		],
		"description": "Cake Links Html->link"
	},
	"AjaxScript": {
		"prefix": [
			"ajax-script",
			"js-script",
			"cake-script"
		],
		"body": [
			"<script type=\"text/javascript\">",
			"",
			"</script>"
		],
		"description": "Javascript"
	},
	"CakeForm": {
		"prefix": "cake-form",
		"body": [
			"<div class=\"tab-content\" style=\"width:800px\">",
			"\t<hr />",
			"\t<div class=\"tab-pane active\" id=\"tab_1\">",
			"\t\t<?php",
			"\t\t\techo \\$this->Form->create('Model');",
			"\t\t\techo \\$this->Form->input('id');",
			"\t\t?>",
			"\t\t<div class=\"form-group row\">",
			"\t\t\t<label for=\"static\" class=\"col-sm-4 col-form-label text-right\"><?= __('Name') ?></label>",
			"\t\t\t<div class=\"col-sm-8\">",
			"\t\t\t\t<?= \\$this->Form->input('name', array(",
			"\t\t\t\t\t'class' => 'form-control',",
			"\t\t\t\t\t'label' => false",
			"\t\t\t\t)); ?>",
			"\t\t\t\t<small class=\"form-text text-muted\">texto explicativo</small>",
			"\t\t\t</div>",
			"\t\t</div>",
			"\t</div>",
			"</div>"
		],
		"description": "Cake Form Model"
	},
	"CakeInput": {
		"prefix": "cake-input",
		"body": [
			"<div class=\"form-group row\">",
			"\t<label for=\"static\" class=\"col-sm-4 col-form-label text-right\"><?= __('Name') ?></label>",
			"\t<div class=\"col-sm-8\">",
			"\t\t<?= \\$this->Form->input('name', array(",
			"\t\t\t'class' => 'form-control',",
			"\t\t\t'label' => false",
			"\t\t)); ?>",
			"\t\t\t\t<small class=\"form-text text-muted\">texto explicativo</small>",
			"\t</div>",
			"</div>"
		],
		"description": "Cake Input"
	},
	"CakeRefreshDiv": {
		"prefix": "cake-refresh-div",
		"body": [
			"<?= \\$this->Api->refresh_div('FRAME', \\$this->Html->url(array(",
			"\t'plugin' => false,",
			"\t'admin' => true,",
			"\t'controller' => 'CONTROLLER',",
			"\t'action' => 'ACTION'",
			")), 10); ?>"
		],
		"description": "Cake Refresh Div"
	},
	"CakeFilterBetween": {
		"prefix": "cake-filter-between",
		"body": [
			"<script type=\"text/javascript\">",
			"\t\\$(function() {",
			"\t\t\\$(\"#dt_from\").datetimepicker({",
			"\t\t\tformat: 'YYYY-MM-DD 00:00'",
			"\t\t});",
			"\t\t\\$(\"#dt_to\").datetimepicker({",
			"\t\t\tformat: 'YYYY-MM-DD 23:59'",
			"\t\t});",
			"\t});",
			"</script>",
			"<div class=\"col-sm-4\">",
			"\t<div class=\"form-group row\">",
			"\t\t<label for=\"staticStatus\" class=\"col-sm-4 col-form-label text-right\">Dê</label>",
			"\t\t<div class=\"col-sm-8\">",
			"\t\t\t<?= \\$this->FilterForm->input('filter_from', array(",
			"\t\t\t\t'id' => 'dt_from',",
			"\t\t\t\t'class' => 'form-control form-control-sm',",
			"\t\t\t\t'label' => false,",
			"\t\t\t)); ?>",
			"\t\t</div>",
			"\t</div>",
			"</div>",
			"<div class=\"col-sm-4\">",
			"\t<div class=\"form-group row\">",
			"\t\t<label for=\"staticStatus\" class=\"col-sm-4 col-form-label text-right\">Até</label>",
			"\t\t<div class=\"col-sm-8\">",
			"\t\t\t<?= \\$this->FilterForm->input('filter_to', array(",
			"\t\t\t\t'id' => 'dt_to',",
			"\t\t\t\t'class' => 'form-control form-control-sm',",
			"\t\t\t\t'label' => false,",
			"\t\t\t)); ?>",
			"\t\t</div>",
			"\t</div>",
			"</div>"
		],
		"description": "Cake Filter Date Between"
	},
	"CakeDateImport": {
		"prefix": "cake-date-import",
		"body": [
			"<link rel=\"stylesheet\" type=\"text/css\" href=\"/portal/css/bootstrap-datetimepicker.min.css\" />",
			"<script type=\"text/javascript\" src=\"/portal/js/bootstrap4/bootstrap.min.js\"></script>",
			"<script type=\"text/javascript\" src=\"/portal/js/bootstrap-datetimepicker.min.js\"></script>",
			"<script type=\"text/javascript\" src=\"/portal/js/jquery/jquery-1.12.1.min.js\"></script>",
			"<script type=\"text/javascript\" src=\"/portal/js/moment-with-locales.js\"></script>"
		],
		"description": "Cake Date Import"
	},
	"CakeFilterDate": {
		"prefix": "cake-filter-date",
		"body": [
			"<div class=\"form-group row\">",
			"\t<label for=\"static\" class=\"col-sm-4 col-form-label text-right\"><?= __('FIELD') ?></label>",
			"\t<div class=\"col-sm-8\">",
			"\t\t<script type=\"text/javascript\">",
			"\t\t\t\\$(function() {",
			"\t\t\t\t\\$(\"#dt_FIELD\").datetimepicker({",
			"\t\t\t\t\tformat: 'YYYY-MM-DD HH:mm'",
			"\t\t\t\t});",
			"\t\t\t});",
			"\t\t</script>",
			"\t\t<?= \\$this->Form->input('FIELD', array(",
			"\t\t\t'type' => 'text',",
			"\t\t\t'id' => 'dt_FIELD',",
			"\t\t\t'label' => false,",
			"\t\t\t'class' => 'form-control',",
			"\t\t)); ?>",
			"\t</div>",
			"</div>"
		],
		"description": "Cake Filter Date"
	},
	"CakeIndexLayout": {
		"prefix": "cake-index-pattern",
		"body": [
			"<div class=\"col-md-12\">",
			"\t<div class=\"box-buttons-top\">",
			"\t\t<?= \\$this->Html->link('<i class=\"zmdi zmdi-plus top-button-icon\"></i> Adicionar', array(",
			"\t\t\t'plugin' => false,",
			"\t\t\t'admin' => true,",
			"\t\t\t'controller' => 'CONTROLLER',",
			"\t\t\t'action' => 'add'",
			"\t\t), array(",
			"\t\t\t'class' => 'top-button',",
			"\t\t\t'escape' => false",
			"\t\t)); ?>",
			"\t</div>",
			"\t<div class=\"row\">",
			"\t\t<div class=\"col-sm-12\">",
			"\t\t\t<span class=\"setting-subtitle\"><?= __('Filtrar por'); ?></span>",
			"\t\t\t<hr />",
			"\t\t\t<?= \\$this->FilterForm->create(); ?>",
			"\t\t</div>",
			"\t\t<div class=\"col-sm-4\">",
			"\t\t\t<div class=\"form-group row\">",
			"\t\t\t\t<label for=\"staticEmail\" class=\"col-sm-4 col-form-label text-right\">Nome</label>",
			"\t\t\t\t<div class=\"col-sm-8\">",
			"\t\t\t\t\t<?= \\$this->FilterForm->input('filter_name', array(",
			"\t\t\t\t\t\t'class' => 'form-control form-control-sm',",
			"\t\t\t\t\t\t'label' => false,",
			"\t\t\t\t\t)); ?>",
			"\t\t\t\t\t<small class=\"form-text text-muted\">texto explicativo</small>",
			"\t\t\t\t</div>",
			"\t\t\t</div>",
			"\t\t</div>",
			"\t\t<div class=\"col-sm-8\">",
			"\t\t\t<div class=\"form-group row\">",
			"\t\t\t\t<div class=\"col-sm-12\">",
			"\t\t\t\t\t<?= \\$this->FilterForm->end(array(",
			"\t\t\t\t\t\t'label' => __('Find'),",
			"\t\t\t\t\t\t'class' => 'btn btn-secondary float-right btn-sm',",
			"\t\t\t\t\t\t'after' => '<div class=\"btn-search float-right btn-sm\"><i class=\"ion ion-ios-search-strong\"></i></div>'",
			"\t\t\t\t\t)); ?>",
			"\t\t\t\t\t<small class=\"form-text text-muted\">texto explicativo</small>",
			"\t\t\t\t</div>",
			"\t\t\t</div>",
			"\t\t</div>",
			"\t</div>",
			"\t<table class=\"table table-hover\">",
			"\t<tr>",
			"\t\t<th><?= \\$this->Paginator->sort('name'); ?></th>",
			"\t</tr>",
			"\t<?php if (count(\\$OBJECTS) == 0) : ?>",
			"\t\t<tr>",
			"\t\t\t<td colspan=\"4\"><?= __('No Register Found') ?></td>",
			"\t\t</tr>",
			"\t<?php endif; ?>",
			"\t<?php foreach (\\$OBJECTS as \\$OBJ) : ?>",
			"\t\t<tr>",
			"\t\t\t<td><?= h(\\$OBJ['MODEL']['name']); ?>&nbsp;</td>",
			"\t\t</tr>",
			"\t<?php endforeach; ?>",
			"\t</table>",
			"\t<?= \\$this->element('paginator'); ?>",
			"</div>"
		],
		"description": "Modelo de layout para pagina de listagem (index.ctp)"
	},
	"CakeTopButton": {
		"prefix": "cake-top-button",
		"body": [
			"<div class=\"box-buttons-top\">",
			"\t<?= \\$this->Html->link('<i class=\"zmdi zmdi-format-list-bulleted top-button-icon\"></i>' . __('List'), array(",
			"\t\t'plugin' => false,",
			"\t\t'admin' => true,",
			"\t\t'controller' => 'CONTROLLER',",
			"\t\t'action' => 'index'",
			"\t), array(",
			"\t\t'class' => 'top-button',",
			"\t\t'escape' => false",
			"\t)); ?>",
			"\t<?= \\$this->Html->link('<i class=\"zmdi zmdi-plus top-button-icon\"></i>' . __('Add'), array(",
			"\t\t'plugin' => false,",
			"\t\t'admin' => true,",
			"\t\t'controller' => 'CONTROLLER',",
			"\t\t'action' => 'add'",
			"\t), array(",
			"\t\t'class' => 'top-button',",
			"\t\t'escape' => false",
			"\t)); ?>",
			"</div>"
		],
		"description": "Cake Date Import"
	},
	"CakeForeach": {
		"prefix": "cake-foreach",
		"body": [
			"<?php foreach( as ) : ?>",
			"\t<tr>",
			"\t\t<td></td>",
			"\t</tr>",
			"<?php endforeach; ?>"
		],
		"description": "Cake Foreach"
	},
	"CakeModal": {
		"prefix": "cake-modal",
		"body": [
			"<button class=\"btn btn-default\" type=\"button\" data-toggle=\"modal\" data-target=\"#MODAL_NAME\"><i class=\"ion ion-plus-round\"></i></button>",
			"<div class=\"modal fade\" id=\"MODAL_NAME\">",
			"\t<div class=\"modal-dialog modal-dialog-centered modal-lg\">",
			"\t\t<div class=\"modal-content\">",
			"\t\t\t<?= \\$this->Form->create('MODEL', array('id' => 'MODEL_id')); ?>",
			"\t\t\t<div class=\"modal-header\">",
			"\t\t\t\t<h5 class=\"modal-title\"><i class=\"zmdi zmdi-comment-edit mr-1\"></i>Adicionar MODEL</h5>",
			"\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Fechar\">",
			"\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>",
			"\t\t\t\t</button>",
			"\t\t\t</div>",
			"\t\t\t<div class=\"modal-body text-center\">",
			"\t\t\t\t<?php",
			"\t\t\t\techo \\$this->Form->hidden('id');",
			"\t\t\t\t?>",
			"\t\t\t\t<div class=\"form-group row\">",
			"\t\t\t\t\t<label for=\"staticTitle\" class=\"col-sm-3 col-form-label text-right\"><?= __('Title') ?></label>",
			"\t\t\t\t\t<div class=\"col-sm-9\">",
			"\t\t\t\t\t\t<?= \\$this->Form->input('name', array('id' => 'tk_name', 'label' => false, 'class' => 'form-control')); ?>",
			"\t\t\t\t\t\t<small class=\"form-text text-muted\">texto explicativo</small>",
			"\t\t\t\t\t</div>",
			"\t\t\t\t</div>",
			"\t\t\t</div>",
			"\t\t\t<div class=\"modal-footer\">",
			"\t\t\t\t<?= \\$this->Form->end(array('label' => 'Salvar Dados', 'class' => 'btn btn-primary btn-sm')) ?>",
			"\t\t\t\t<button type=\"button\" class=\"btn btn-secondary btn-sm\" data-dismiss=\"modal\">Cancelar</button>",
			"\t\t\t</div>",
			"\t\t</div>",
			"\t</div>",
			"</div>",
			"<?= \\$this->Html->link('<i class=\"ion ion-plus\"></i>', '#', array(",
			"\t\t'data-toggle' => 'modal',",
			"\t\t'data-target' => '#MODAL_NAME',",
			"\t\t'data-backdrop' => 'static',",
			"\t\t'escape' => false,",
			"\t));",
			"?>"
		],
		"description": "Cake Modal"
	},
	"CakeModalRight": {
		"prefix": "cake-modal-right",
		"body": [
			"<button class=\"btn btn-default\" type=\"button\" data-toggle=\"modal\" data-target=\"#MODAL_NAME\"><i class=\"ion ion-plus-round\"></i></button>",
			"<div class=\"modal custom-modal fade\" id=\"MODAL_NAME\">",
			"\t<div class=\"modal-dialog modal-dialog-right modal-lg\">",
			"\t\t<div class=\"modal-content\">",
			"\t\t\t<?= \\$this->Form->create('MODEL', array('id' => 'MODEL_id')); ?>",
			"\t\t\t<div class=\"modal-header\">",
			"\t\t\t\t<h5 class=\"modal-title\">Adicionar MODEL</h5>",
			"\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Fechar\">",
			"\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>",
			"\t\t\t\t</button>",
			"\t\t\t</div>",
			"\t\t\t<div class=\"modal-body text-center\">",
			"\t\t\t\t<?php",
			"\t\t\t\techo \\$this->Form->hidden('id');",
			"\t\t\t\t?>",
			"\t\t\t\t<div class=\"form-group row\">",
			"\t\t\t\t\t<label for=\"staticTitle\" class=\"col-sm-3 col-form-label text-right\"><?= __('Title') ?></label>",
			"\t\t\t\t\t<div class=\"col-sm-9\">",
			"\t\t\t\t\t\t<?= \\$this->Form->input('name', array('id' => 'tk_name', 'label' => false, 'class' => 'form-control')); ?>",
			"\t\t\t\t\t\t<small class=\"form-text text-muted\">texto explicativo</small>",
			"\t\t\t\t\t</div>",
			"\t\t\t\t</div>",
			"\t\t\t</div>",
			"\t\t\t<div class=\"modal-footer\">",
			"\t\t\t\t<?= \\$this->Form->end(array('label' => 'Salvar Dados', 'class' => 'btn btn-primary btn-sm')) ?>",
			"\t\t\t\t<button type=\"button\" class=\"btn btn-secondary btn-sm\" data-dismiss=\"modal\">Cancelar</button>",
			"\t\t\t</div>",
			"\t\t</div>",
			"\t</div>",
			"</div>",
			"<?= \\$this->Html->link('<i class=\"ion ion-plus\"></i>', '#', array(",
			"\t\t'data-toggle' => 'modal',",
			"\t\t'data-target' => '#MODAL_NAME',",
			"\t\t'data-backdrop' => 'static',",
			"\t\t'escape' => false,",
			"\t));",
			"?>"
		],
		"description": "Cake Modal"
	},
	"CakeSelectInput": {
		"prefix": "cake-select",
		"body": [
			"<?= \\$this->Form->input('a_status', array(",
			"\t\t\t\t'type' => 'select',",
			"\t\t\t\t'id' => 'SELECT_ID',",
			"\t\t\t\t'options' => \\$items,",
			"\t\t\t\t'class' => 'form-control',",
			"\t\t\t\t'label' => false",
			"\t\t\t)); ?>"
		],
		"description": "Cake Select Input"
	},
	"tableResponsive": {
		"prefix": "cake-responsive-table",
		"body": [
			"<div class=\"table-responsive\">",
			"\t<table class=\"table table-striped table-hover\">",
			"\t\t<tr>",
			"\t\t\t<th class=\"text-center\"><?= \\$this->Paginator->sort('FIELD', 'LABEL'); ?></th>",
			"\t\t</tr>",
			"\t\t<tr>",
			"\t\t\t<td class=\"text-center\"><?= h(\\$OBJECT['MODEL']['FIELD']); ?></td>",
			"\t\t</tr>",
			"\t</table>",
			"</div>",
			"<?= \\$this->element('paginator'); ?>"
		],
		"description": "Responsive table pattern"
	},
	"buttonShowModal": {
		"prefix": "cake-button-showmodal",
		"body": [
			"<button class=\"btn btn-default\" type=\"button\" data-toggle=\"modal\" data-target=\"#MODAL_NAME\"><i class=\"ion ion-plus-round\"></i></button>"
		],
		"description": "Cake Button Show Modal"
	},
	"cakeButton": {
		"prefix": "cake-button",
		"body": [
			"<?= \\$this->Form->button('LABEL_VALUE', array(",
			"\t'onclick' => '',",
			"\t'class' => 'btn btn-sm btn-primary',",
			")); ?>"
		],
		"description": "Cake Button"
	},
	"basicImports": {
		"prefix": [
			"cake-basic-imports",
			"js-basic-imports",
			"ajax-basic-imports"
		],
		"body": [
			"<!--",
			"Run yarn add --modules-folder vendor/ PACKAGE",
			" or front install PACKAGE",
			"-->",
			"<link rel=\"stylesheet\" href=\"vendor/bootstrap/dist/css/bootstrap.min.css\">",
			"<script src=\"vendor/moment/min/moment.min.js\"></script>",
			"<script src=\"vendor/jquery/dist/jquery.min.js\"></script>"
		],
		"description": "Cake Button"
	},
	"inputKeyEnter": {
		"prefix": [
			"cake-input-key-enter"
		],
		"body": [
			"<?= \\$this->Form->input('FIELD', array(",
			"\t'id' => 'FIELDID',",
			"\t'class' => 'form-control',",
			"\t'label' => false,",
			"\t'onkeypress' => 'contactKeyEnter(event)'",
			")); ?>",
			"<input id=\"FIELDID\" class=\"form-control\" onkeypress=\"contactKeyEnter(event)\">",
			"",
			"function contactKeyEnter(event) {",
			"\tif ((\\$('#FIELDID').val().trim() !== '') && (event.key === \"Enter\")) {",
			"\t\tconsole.log('enter:', \\$('#FIELDID').val());",
			"\t}",
			"}"
		],
		"description": "Cake Input Enter"
	},
	"htmlBootstrapCdn": {
		"prefix": [
			"html-cdn-bootstrap"
		],
		"body": [
			"<!-- Bootstrap -->",
			"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">",
			"<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.3/dist/jquery.slim.min.js\"></script>",
			"<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>",
			"<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>"
		],
		"description": "HTML Bootstrap CDN"
	},
	"htmlJqueryCdn": {
		"prefix": [
			"html-cdn-jquery"
		],
		"body": [
			"<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>"
		],
		"description": "HTML Jquery CDN"
	},
	"B4GroupButtonOnly": {
		"prefix": [
			"b4-group-button-only"
		],
		"body": [
			"<div class=\"btn-group btn-group-sm float-right\" role=\"group\">",
			"\t<button type=\"button\" class=\"btn btn-secondary\">Left</button>",
			"\t<button type=\"button\" class=\"btn btn-secondary\">Middle</button>",
			"\t<button type=\"button\" class=\"btn btn-secondary\">Right</button>",
			"</div>"
		],
		"description": "B4 Group Button Only"
	},
	"cake-debug": {
		"prefix": [
			"cake-debug"
		],
		"body": [
			"<?php debug(); ?>"
		],
		"description": "Cake Debug"
	},
	"cake-if": {
		"prefix": [
			"cake-if"
		],
		"body": [
			"<?php if() : ?>",
			"",
			"<?php endif; ?>"
		],
		"description": "Cake IF"
	},
	"phpJsonOutput": {
		"prefix": [
			"php-json-output",
			"cake-json-output",
			"html-json-output"
		],
		"body": [
			"<?php",
			"\\$json = '{",
			"\t\"nome\": \"João\",",
			"\t\"idade\": 30",
			"}';",
			"header('Content-Type: application/json');",
			"echo \\$json;",
			"exit;",
			"?>"
		],
		"description": "Cake HTTP Socket Template"
	},
	"HtmlLinkPausaEdit": {
		"prefix": [
			"cake-index-edit",
			"cake-td-edit",
			"cake-td-index",
			"html-index-table-edit-link"
		],
		"body": [
			"<td><?= \\$this->Html->link(\\$OBJECT['MODEL']['FIELD'], array(",
			"\t'plugin' => false,",
			"\t'admin' => true,",
			"\t'controller' => 'CONTROLLER',",
			"\t'action' => 'edit', \\$OBJECT['MODEL']['id']",
			"), array(",
			"\t'class' => 'field-edit'",
			")); ?>&nbsp;</td>"
		],
		"description": "Html link for Pausa edit"
	},
	"ZmdiIconList": {
		"prefix": [
			"html-icon-list",
			"zmdi-icon-list"
		],
		"body": [
			"<i class=\"zmdi zmdi-format-list-bulleted top-button-icon\"></i>"
		],
		"description": "Zmdi Icon List - format-list-bulleted"
	},
	"ZmdiIconAdd": {
		"prefix": [
			"html-icon-add",
			"zmdi-icon-add"
		],
		"body": [
			"<i class=\"zmdi zmdi-plus top-button-icon\"></i>"
		],
		"description": "Zmdi Icon Add - format-list-bulleted"
	},
	"ZmdiIconEdit": {
		"prefix": [
			"html-icon-edit",
			"zmdi-icon-edit"
		],
		"body": [
			"<i class=\"zmdi zmdi-edit top-button-icon\"></i>"
		],
		"description": "Zmdi Icon Edit - format-list-bulleted"
	},
	"ZmdiIconView": {
		"prefix": [
			"html-icon-view",
			"zmdi-icon-view"
		],
		"body": [
			"<i class=\"zmdi zmdi-eye top-button-icon\"></i>"
		],
		"description": "Zmdi Icon View - format-list-bulleted"
	},
	"ZmdiIconTrash": {
		"prefix": [
			"html-icon-trash",
			"ion-icon-trash"
		],
		"body": [
			"<i class=\"ion ion-trash-a top-button-icon\"></i>"
		],
		"description": "Ion Icon View - format-list-bulleted"
	},
	"GetSetFilterFormData": {
		"prefix": [
			"html-get-set-filter-form-data",
			"html-filter-date-time-picker"
		],
		"body": [
			"<?= \\$this->Form->create('filters'); ?>",
			"<script type=\"text/javascript\">",
			"\t$(function() {",
			"\t\t$(\"#dt_from\").datetimepicker({",
			"\t\t\tformat: 'DD/MM/YYYY HH:mm'",
			"\t\t});",
			"\t});",
			"</script>",
			"<div class=\"col-sm-4\">",
			"\t<div class=\"form-group row\">",
			"\t\t<label for=\"staticStatus\" class=\"col-sm-4 col-form-label text-right\">Data Início *</label>",
			"\t\t<div class=\"col-sm-8\">",
			"\t\t\t<?= \\$this->Form->input('filter_from', array(",
			"\t\t\t\t'id' => 'dt_from',",
			"\t\t\t\t'class' => 'form-control form-control-sm',",
			"\t\t\t\t'label' => false,",
			"\t\t\t)); ?>",
			"\t\t</div>",
			"\t</div>",
			"</div>"
		],
		"description": "DateTimePicker setup and view"
	},
	"RoundDecimals": {
		"prefix": [
			"html-round-2-decimals",
			"php-round-2-decimals"
		],
		"body": [
			"$number = 123.456789;",
			"debug(round($number, 2));"
		],
		"description": "Round number 2 decimals in PHP"
	},
	"ApiHelperGetList": {
		"prefix": [
			"cake-api-find-all-list-count"
		],
		"body": [
			"${1:<?php}",
			"// default values",
			"// \\$type = 'all, list, first, count'",
			"// \\$fields = array('id, name')",
			"// \\$conditions = array()",
			"// \\$order = array('name' => 'asc'))",
			"    // \\$this->Api->find('list', 'Model', \\$fields, \\$conditions, \\$order)",
			"    \\$objects = \\$this->Api->find('list', 'Model');",
			"?>",
			"<?php foreach (\\$objects as \\$key => \\$label) : ?>",
			"<?php endforeach; ?>"
		],
		"description": "Exemplo de uso do get lista da api helper"
	},
	"BootstrapHTMLTemplate": {
		"prefix": "html-template-bootstrap",
		"body": [
			"<!DOCTYPE html>",
			"<html lang=\"en\">",
			"<head>",
			"\t<meta charset=\"UTF-8\">",
			"\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
			"\t<title>Document</title>",
			"\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">",
			"</head>",
			"<body>",
			"\t<div class=\"container mt-4\">",
			"\t\t<div class=\"card\">",
			"\t\t\t<img src=\"https://via.placeholder.com/150\" class=\"card-img-top\" alt=\"Imagem do Card\">",
			"\t\t\t<div class=\"card-body\">",
			"\t\t\t\t<h5 class=\"card-title\">Título do Card</h5>",
			"\t\t\t\t<p class=\"card-text\">Este é um exemplo de conteúdo para o card. Você pode adicionar texto, imagens e outros elementos aqui.</p>",
			"\t\t\t\t<a href=\"#\" class=\"btn btn-primary\">Botão</a>",
			"\t\t\t</div>",
			"\t\t</div>",
			"\t</div>",
			"\t",
			"\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>",
			"\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>",
			"\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>",
			"</body>",
			"</html>"
		],
		"description": "Modelo de página HTML com Bootstrap"
	},
	"B4Card": {
		"prefix": [
			"b4-card",
			"html-card"
		],
		"body": [
			"<div class=\"card\">",
			"\t<img src=\"https://via.placeholder.com/150\" class=\"card-img-top\" alt=\"Imagem do Card\">",
			"\t<div class=\"card-body\">",
			"\t\t<h5 class=\"card-title\">Título do Card</h5>",
			"\t\t<p class=\"card-text\">Este é um exemplo de conteúdo para o card. Você pode adicionar texto, imagens e outros elementos aqui.</p>",
			"\t\t<a href=\"#\" class=\"btn btn-primary\">Botão</a>",
			"\t</div>",
			"</div>"
		],
		"description": "Template bootstrap card"
	},
	"B4Offset": {
		"prefix": [
			"b4-offset",
			"html-offset-bootstrap"
		],
		"body": [
			"<div class=\"col-md-6 offset-md-3\"></div>"
		],
		"description": "Template bootstrap offset"
	},
	"BootstrapAppend": {
		"prefix": [
			"cake-prepend",
			"cake-append"
		],
		"body": [
			"${1:<?}",
			"<div class=\"input-group\">",
			"    <?= \\$this->Form->input('filter_from_day', array(",
			"        'id' => 'dt_from_day',",
			"        'class' => 'form-control form-control-sm',",
			"        'label' => false,",
			"        'placeholder' => 'Dia/Mês/Ano Hora',",
			"        'div' => false // <--important",
			"    )); ?>",
			"    <div class=\"input-group-append\">",
			"        <div class=\"input-group-text\"><i class=\"zmdi zmdi-calendar\"></i></div>",
			"    </div>",
			"</div>"
		],
		"description": "Exemplo de uso do get lista da api helper"
	},
	"CakeLookup": {
		"prefix": "cake-lookup",
		"body": [
			"<div class=\"form-group row\">",
			"\t<label for=\"staticEmail\" class=\"col-sm-4 col-form-label text-right\"><?= __('Role') ?></label>",
			"\t<div class=\"col-sm-8\">",
			"\t\t<?= $this->Element('admin/lookup/roles_lookup'); ?>",
			"\t</div>",
			"</div>"
		],
		"description": "HTML form group with label and element"
	},
	"Combo": {
		"prefix": "combo-json",
		"body": [
			"<select id=\"\" class=\"form-control\"></select>"
		],
		"description": "Combo Json"
	}
}